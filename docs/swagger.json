{
    "swagger": "2.0",
    "info": {
        "description": "API для работы с людьми, включая создание, обновление, удаление и получение данных.",
        "title": "People API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/people": {
            "get": {
                "description": "Возвращает список людей с возможностью фильтрации по имени и полу, а также пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Получение списка людей с фильтрацией и пагинацией",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Пол",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Person"
                            }
                        }
                    },
                    "400": {
                        "description": "{\\\"error\": \\\"Invalid query parameters\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Принимает ФИО, обогащает данными (возраст, пол, национальность) и сохраняет в БД",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Создание нового человека",
                "parameters": [
                    {
                        "description": "Имя, фамилия и отчество",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\": \\\"Invalid input\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\": \\\"Failed to save person\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/people/{id}": {
            "put": {
                "description": "Обновляет информацию о человеке по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Обновление информации о человеке",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\": \\\"Invalid input\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\\\"error\": \\\"Person not found\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет человека из базы данных по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Удаление человека по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\\\"message\\\": \\\"Пользователь удален\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"Invalid ID\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "{\\\"error\\\": \\\"Person not found\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"Failed to delete person\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Person": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}